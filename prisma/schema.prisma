generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model annualreports {
  id     BigInt  @id(map: "annualreports_duplicate_pkey") @default(autoincrement())
  ticker String? @db.VarChar
  year   BigInt?
  kpi    String? @db.VarChar
  value  Float?  @db.Real

  @@unique([year, ticker, kpi], map: "annualreports_duplicate_year_ticker_kpi_key")
}

model comments {
  id      BigInt  @id(map: "comment_pkey") @default(autoincrement())
  ticker  String  @db.VarChar
  comment String?
}

model companies {
  id                      BigInt  @id @default(autoincrement())
  ticker                  String  @unique @db.VarChar
  companyname             String? @db.VarChar
  stockcurrency           String?
  reportcurrency          String?
  country                 String? @db.VarChar
  industry                String? @db.VarChar
  sector                  String? @db.VarChar
  beta                    Float?  @db.Real
  longdescription         String?
  balancesheetdate        String? @db.VarChar
  dividendyield           Float?  @db.Real
  percentinsidershold     Float?  @db.Real
  percentinstitutionshold Float?  @db.Real
  sharesoutstanding       BigInt?
  forwardeps              Float?  @db.Real
  lastyearreport          Int?
}

model currencies {
  id                  BigInt @id @default(autoincrement())
  currency            String
  usdconversionfactor Float? @db.Real
}

model currentprices {
  id     BigInt  @id @default(autoincrement())
  ticker String?
  price  Float?
}

model expectedgrowth {
  id             BigInt @id @default(autoincrement())
  ticker         String @unique @db.VarChar
  expectedgrowth Float? @db.Real
}

model fundamentalanalysis {
  ticker                         String?
  companyname                    String?
  currentprice                   Float?
  targetprice                    Float?
  dcfpotential                   Float?
  dcfworstpotential              Float?
  sector                         String?
  country                        String?
  stockcurrency                  String?
  reportcurrency                 String?
  lastreportdate                 String?
  currentper                     Float?
  meanper                        Float?
  currentevebitda                Float?
  meanevebitda                   Float?
  currentevebit                  Float?
  currentpricetobook             Float?
  meanpricetobook                Float?
  currentpricetofreecashflowrate Float?
  meanpricetofreecashflowrate    Float?
  roe                            Float?
  roic                           Float?
  meanroic                       Float?
  roce                           Float?
  roa                            Float?
  beta                           Float?
  netdebttoprice                 Float?
  cashtototalassets              Float?
  cashoverstockprice             Float?
  debtqualityratio               Float?
  liabilitiestoequityratio       Float?
  netdebttoebitda                Float?
  meannetdebttoebitda            Float?
  interestexpensetoebit          Float?
  entreprisevalueusd             Float?
  ebitdatendency                 Float?
  freecashflowtendency           Float?
  operatingcashflowtendency      Float?
  netincometendency              Float?
  equitytendency                 Float?
  roictendency                   Float?
  dividendyield                  Float?
  ebitdamargin                   Float?
  netincomemargin                Float?
  wacc                           Float?
  pffo                           Float?
  meanpffo                       Float?
  lastupdate                     String?
  firstyearreport                String?
  id                             BigInt  @id @unique
}

model historicalprices {
  id        BigInt @id @default(autoincrement())
  ticker    String
  year      Int?
  meanprice Float? @db.Real
  maxprice  Float? @db.Real
  minprice  Float? @db.Real
}

model industries {
  id               BigInt  @id(map: "industry_pkey") @default(autoincrement())
  industry         String? @db.VarChar
  sector           String? @db.VarChar
  evebitdamultiple String? @db.VarChar
  cyclical         Float?  @db.Real
  category         String? @db.VarChar
  sectorid         String? @db.VarChar
}

model kpis {
  id  BigInt @id(map: "KPIs_pkey") @unique @default(autoincrement())
  kpi String @unique(map: "KPIs_KPI_key") @db.VarChar
}

model ordinarysharesalternatives {
  id          BigInt  @id @default(autoincrement())
  ticker      String? @db.VarChar
  alternative Int?    @db.SmallInt
}

model sector {
  id     Int     @id @default(autoincrement())
  sector String? @unique @db.VarChar(255)
}

model simpleanalysis {
  ticker             String?
  companyname        String?
  potential          Float?
  targetprice        Float?
  currency           String?
  debtqualityscore   Float?
  earningsscore      Float?
  profitabilityscore Float?
  growthscore        Float?
  sector             String?
  id                 BigInt  @id @unique
}

model transactions {
  id              Int       @id @default(autoincrement())
  ticker          String?   @db.VarChar(255)
  date            DateTime? @db.Date
  transactiontype String?   @db.VarChar(255)
  price           Decimal?  @db.Decimal
  numberofstocks  Int?
}
